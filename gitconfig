[user]
    name = matrumz
    email = matrumz@hotmail.com
[core]
    editor = vim
    autocrlf = false
    # Don't consider trailing space change as a cause for merge conflicts
    whitespace = -trailing-space
[status]
    # Recursively traverse untracked directories to display all contents
    showUntrackedFiles = all
[pull]
    ff = only
[push]
    default = simple
[merge]
    ff = only
[grep]
    extendedRegexp = true
[advice]
    detachedHead = false
[alias]
    # tweak this in the future such that it can intelligently abort anything
    abort = rebase --abort
    amend = "!f() { git commit --fixup=amend:$1 ;}; f"
    cat = "!git show \"$1:$2\" #"
    cmain = "!f() { git fetch origin main && git checkout origin/main ;}; f"
    conflicts = diff --name-only --diff-filter=U
    cp = cherry-pick
    default-branch = "!f() { git symbolic-ref refs/remotes/origin/HEAD | sed 's@^refs/remotes/origin/@@ ; /^[[:space:]]*$/d ; s/^\n//' ;}; f"
    fixup = commit -e --fixup
    fpwl = push --force --force-with-lease
    ignore = "!f() { echo \"$1\" >> .gitignore; }; f"
    irebase = rebase --interactive
    leaves = log --graph --oneline --all --decorate=short --simplify-by-decoration
    ll = log --oneline
    localleaves = log --graph --oneline --branches --decorate=short --simplify-by-decoration
    localtree = log --graph --oneline --branches --decorate=short --pretty=format:'%C(auto)%h -%C(auto)%d %s %C(green)(%cr) %C(bold blue)<%an>%C(reset)'
    ls-staged = diff --staged --diff-filter=d --name-only
    ls-tracked = "ls-files --exclude-from=.gitignore"
    ls-unstaged = ls-files --modified --others --exclude-standard
    ls-untracked = "ls-files --exclude-from=.gitignore --others"
    pushup = "!f() { git push --set-upstream $1 $(git rev-parse --abbrev-ref HEAD); }; f"
    rmain = "!f() { git fetch origin main && git rebase -i origin/main ;}; f"
    s = status
    save-rebase = !git tag $(echo rebase-restore/$(git rev-parse --abbrev-ref HEAD)/$(date --utc \"+%Y%m%dT%H%M%SZ\"))
    squash = rebase -i
    stash-all = stash push --include-untracked
    stash-staged = stash push --include-untracked -- (git ls-staged)
    stash-unstaged = stash push --keep-index --include-untracked -- (git ls-unstaged)
    status-unpushed = log --branches --not --remotes
    tree = log --graph --oneline --all --decorate=short --pretty=format:'%C(auto)%h -%C(auto)%d %s %C(green)(%cr) %C(bold blue)<%an>%C(reset)'
